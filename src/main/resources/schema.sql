CREATE TABLE IF NOT EXISTS countries (
   country_name VARCHAR(100),
   country_code VARCHAR(50),
   iso_codes VARCHAR(10),
   code_3 VARCHAR(10),
   code_2 VARCHAR(10),
   code_3a VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS airports (
    airport_code VARCHAR(10),
    country_code VARCHAR(10),
    city VARCHAR(100),
    airport_name VARCHAR(255),
    state VARCHAR(50),
    time_zone_offset DECIMAL(3, 1),
    latitude DECIMAL(10, 5),
    longitude DECIMAL(10, 5)
);

CREATE TABLE IF NOT EXISTS airline_schedule (
    flight_number VARCHAR(10),
    origin VARCHAR(10),
    destination VARCHAR(10),
    frequency VARCHAR(10),
    days VARCHAR(10),
    departure_time VARCHAR(10),
    arrival_time VARCHAR(10),
    effective_date DATE,
    discontinued_date DATE,
    suspension_start DATE,
    suspension_end DATE,
    notes TEXT
);

CREATE TABLE IF NOT EXISTS users (
    ID               BIGINT auto_increment primary key,
    GENDER                 CHARACTER VARYING(255),
    NAME_SET               CHARACTER VARYING(255),
    TITLE                  CHARACTER VARYING(255),
    GIVEN_NAME             CHARACTER VARYING(255),
    MIDDLE_INITIAL         CHARACTER VARYING(255),
    SURNAME                CHARACTER VARYING(255),
    STREET_ADDRESS         CHARACTER VARYING(255),
    CITY                   CHARACTER VARYING(255),
    STATE                  CHARACTER VARYING(255),
    STATE_FULL             CHARACTER VARYING(255),
    ZIP_CODE               CHARACTER VARYING(255),
    COUNTRY                CHARACTER VARYING(255),
    COUNTRY_FULL           CHARACTER VARYING(255),
    EMAIL_ADDRESS          CHARACTER VARYING(255),
    USER_NAME              CHARACTER VARYING(255),
    PASSWORD               CHARACTER VARYING(255),
    BROWSER_USER_AGENT     CHARACTER VARYING(255),
    TELEPHONE_NUMBER       CHARACTER VARYING(255),
    TELEPHONE_COUNTRY_CODE CHARACTER VARYING(255),
    MAIDEN_NAME            CHARACTER VARYING(255),
    BIRTHDAY               CHARACTER VARYING(255),
    AGE                    INTEGER,
    TROPICAL_ZODIAC        CHARACTER VARYING(255),
    CC_TYPE                CHARACTER VARYING(255),
    CC_NUMBER              CHARACTER VARYING(255),
    CVV2                   CHARACTER VARYING(255),
    CC_EXPIRES             CHARACTER VARYING(255),
    NATIONAL_ID            CHARACTER VARYING(255),
    UPS_TRACKING           CHARACTER VARYING(255),
    WESTERN_UNION_MTCN     CHARACTER VARYING(255),
    MONEYGRAM_MTCN         CHARACTER VARYING(255),
    COLOR                  CHARACTER VARYING(255),
    OCCUPATION             CHARACTER VARYING(255),
    COMPANY                CHARACTER VARYING(255),
    VEHICLE                CHARACTER VARYING(255),
    DOMAIN                 CHARACTER VARYING(255),
    BLOOD_TYPE             CHARACTER VARYING(255),
    POUNDS                 DOUBLE PRECISION,
    KILOGRAMS              DOUBLE PRECISION,
    FEET_INCHES            CHARACTER VARYING(255),
    CENTIMETERS            INTEGER,
    GUID                   CHARACTER VARYING(255),
    LATITUDE               DOUBLE PRECISION,
    LONGITUDE              DOUBLE PRECISION
);

CREATE TABLE IF NOT EXISTS roles (
    ID   INTEGER auto_increment primary key,
    NAME CHARACTER LARGE OBJECT
);

CREATE TABLE IF NOT EXISTS role_user (
    ROLE_ID INTEGER not null references roles,
    USER_ID BIGINT  not null references users,
    primary key (ROLE_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS task (
    ID          BIGINT generated by default as identity (maxvalue 2147483647) primary key,
    NAME        CHARACTER VARYING(255),
    DESCRIPTION CHARACTER VARYING(255),
    TYPE        CHARACTER VARYING(255),
    PARENT_ID   INTEGER,
    STATUS      CHARACTER VARYING(255),
    START_DATE  CHARACTER VARYING(255),
    END_DATE    CHARACTER VARYING(255),
    SEQUENCE    INTEGER,
    ASSIGNED_TO BIGINT,
    constraint FOREIGN_KEY_NAME foreign key (ASSIGNED_TO) references users
);

--CREATE VIEW  IF NOT EXISTS unique_markets AS
--SELECT DISTINCT
--    CASE
--        WHEN Origin < Destination THEN CONCAT(Origin, Destination)
--        ELSE CONCAT(Destination, Origin)
--        END AS market
--FROM airline_schedule;

--CREATE OR REPLACE VIEW unique_markets AS
--SELECT DISTINCT
--    CASE
--        WHEN Origin < Destination THEN Origin
--        ELSE Destination
--        END AS orig,
--    CASE
--        WHEN Origin < Destination THEN Destination
--        ELSE Origin
--        END AS dest
--FROM airline_schedule;

CREATE OR REPLACE VIEW unique_markets AS
SELECT DISTINCT
    CASE
        WHEN
            Origin < Destination
        THEN
            Origin
        ELSE
            Destination
        END AS orig,
    CASE
        WHEN
            Origin < Destination
        THEN
            Destination
        ELSE
            Origin
        END AS dest,
    orig_airport.latitude AS orig_latitude,
    orig_airport.longitude AS orig_longitude,
    dest_airport.latitude AS dest_latitude,
    dest_airport.longitude AS dest_longitude
FROM airline_schedule
         JOIN airports AS orig_airport ON
        (CASE
             WHEN Origin < Destination THEN Origin
             ELSE Destination
            END) = orig_airport.airport_code
         JOIN airports AS dest_airport ON
        (CASE
             WHEN Origin < Destination THEN Destination
             ELSE Origin
            END) = dest_airport.airport_code;

CREATE OR REPLACE VIEW unique_markets AS
SELECT DISTINCT
    CASE
        WHEN origin <= destination THEN origin || '-' || destination
        ELSE destination || '-' || origin
        END AS Market
FROM airline_schedule;